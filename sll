class Node:
    def __init__(self, value):
        self.value = value
        self.next = None


class SLL:
    def __init__(self):
        self.head = None

    def append(self, value):
        newNode = Node(value)
        if self.head == None:
            self.head = newNode
        else:
            runner = self.head
            while runner.next != None:
                runner = runner.next
            runner.next = newNode
        return self

    def display(self):
        runner = self.head
        while runner != None:
            print(runner.value)
            runner = runner.next
        print(runner)

    def removeFront(self):
        self.head = self.head.next


def lastNode(self):
    if self.head == None:
        return None
    if self.head.next == None:
        self.head = None
        return None
    second_last = self.head
    while(second_last.next.next):
        second_last = second_last.next
    second_last.next = None
    return self.head


newSLL = SLL()
newSLL.append(5).append(8).append(12)
lastNode(newSLL)
newSLL.display()
